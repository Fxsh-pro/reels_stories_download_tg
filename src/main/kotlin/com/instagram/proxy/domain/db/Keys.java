/*
 * This file is generated by jOOQ.
*/
package com.instagram.proxy.domain.db;


import com.instagram.proxy.domain.db.tables.SchemaVersion;
import com.instagram.proxy.domain.db.tables.UserRequests;
import com.instagram.proxy.domain.db.tables.records.SchemaVersionRecord;
import com.instagram.proxy.domain.db.tables.records.UserRequestsRecord;

import javax.annotation.Generated;

import org.jooq.Identity;
import org.jooq.UniqueKey;
import org.jooq.impl.Internal;


/**
 * A class modelling foreign key relationships and constraints of tables of 
 * the <code>PUBLIC</code> schema.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.7"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Keys {

    // -------------------------------------------------------------------------
    // IDENTITY definitions
    // -------------------------------------------------------------------------

    public static final Identity<UserRequestsRecord, Integer> IDENTITY_USER_REQUESTS = Identities0.IDENTITY_USER_REQUESTS;

    // -------------------------------------------------------------------------
    // UNIQUE and PRIMARY KEY definitions
    // -------------------------------------------------------------------------

    public static final UniqueKey<UserRequestsRecord> CONSTRAINT_2 = UniqueKeys0.CONSTRAINT_2;
    public static final UniqueKey<SchemaVersionRecord> SCHEMA_VERSION_PK = UniqueKeys0.SCHEMA_VERSION_PK;

    // -------------------------------------------------------------------------
    // FOREIGN KEY definitions
    // -------------------------------------------------------------------------


    // -------------------------------------------------------------------------
    // [#1459] distribute members to avoid static initialisers > 64kb
    // -------------------------------------------------------------------------

    private static class Identities0 {
        public static Identity<UserRequestsRecord, Integer> IDENTITY_USER_REQUESTS = Internal.createIdentity(UserRequests.USER_REQUESTS, UserRequests.USER_REQUESTS.ID);
    }

    private static class UniqueKeys0 {
        public static final UniqueKey<UserRequestsRecord> CONSTRAINT_2 = Internal.createUniqueKey(UserRequests.USER_REQUESTS, "CONSTRAINT_2", UserRequests.USER_REQUESTS.ID);
        public static final UniqueKey<SchemaVersionRecord> SCHEMA_VERSION_PK = Internal.createUniqueKey(SchemaVersion.SCHEMA_VERSION, "schema_version_pk", SchemaVersion.SCHEMA_VERSION.VERSION);
    }
}
